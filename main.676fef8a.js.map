{"version":3,"sources":["scripts/Cell.js","scripts/Field.js","scripts/Button.js","scripts/Message.js","scripts/Score.js","scripts/Controls.js","scripts/SwipeControls.js","scripts/Game.js","scripts/main.js"],"names":["Cell","element","isEmpty","value","classList","remove","add","textContent","module","exports","require","Field","cells","querySelectorAll","forEach","row","cellElements","rowCells","map","cell","push","reduce","maxValue","rowMaxValue","rowMax","Math","max","hasEmptyCell","rowIndex","columnIndex","isValueAboveSame","isValueToLeftSame","score","currentIndex","i","setValue","clear","length","mergedValue","totalScore","mergeCells","reversedRow","slice","reverse","transposeCells","transposedCells","column","emptyCells","randomIndex","floor","random","randomCell","Button","startFunc","restartFunc","addEventListener","contains","Message","messageType","message","Score","Controls","onLeft","onRight","onUp","onDown","onAction","enabled","KEYS","LEFT","RIGHT","UP","DOWN","document","keyboardEvent","key","Object","values","includes","SwipeControls","touchStartX","touchStartY","e","touches","clientX","clientY","touchEndX","changedTouches","touchEndY","deltaX","deltaY","abs","Game","START_VALUE","END_VALUE","MESSAGES","WIN","LOSE","START","getRandomValue","min","querySelector","field","button","addTile","setMessage","controls","reset","points","shiftLeft","addPoints","shiftRight","shiftUp","shiftDown","getMaxValue","hasAvailableMoves","newValue","initializeGame"],"mappings":"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","file":"main.676fef8a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nclass Cell {\n  constructor(element) {\n    this.isEmpty = true;\n    this.value = 0;\n    this.element = element;\n  }\n\n  setValue(value) {\n    if (!this.isEmpty) {\n      this.element.classList.remove('field-cell--' + this.value);\n    }\n    this.isEmpty = false;\n    this.element.classList.add('field-cell--' + value);\n    this.value = value;\n    this.element.textContent = value;\n  }\n\n  clear() {\n    this.isEmpty = true;\n    this.element.classList.remove('field-cell--' + this.value);\n    this.value = 0;\n    this.element.textContent = '';\n  }\n}\n\nmodule.exports = Cell;\n","'use strict';\n\nconst Cell = require('./Cell');\n\nclass Field {\n  constructor(element) {\n    this.cells = [];\n\n    const rows = element.querySelectorAll('.field-row');\n\n    rows.forEach((row) => {\n      const cellElements = row.querySelectorAll('.field-cell');\n      const rowCells = [...cellElements].map((cell) => new Cell(cell));\n\n      this.cells.push(rowCells);\n    });\n  }\n\n  getMaxValue() {\n    return this.cells.reduce((maxValue, row) => {\n      const rowMaxValue = row.reduce((rowMax, cell) => {\n        return Math.max(rowMax, cell.value);\n      }, 0);\n\n      return Math.max(maxValue, rowMaxValue);\n    }, 0);\n  }\n\n  hasAvailableMoves() {\n    let hasEmptyCell = false;\n\n    this.cells.forEach((row, rowIndex) => {\n      row.forEach((cell, columnIndex) => {\n        const isEmpty = cell.isEmpty;\n        const isValueAboveSame = rowIndex > 0\n          && this.cells[rowIndex - 1][columnIndex].value === cell.value;\n        const isValueToLeftSame = columnIndex > 0\n          && this.cells[rowIndex][columnIndex - 1].value === cell.value;\n\n        if (isEmpty || isValueAboveSame || isValueToLeftSame) {\n          hasEmptyCell = true;\n        }\n      });\n    });\n\n    return hasEmptyCell;\n  }\n\n  mergeCells(cells) {\n    let score = 0;\n    let currentIndex = 0;\n\n    cells.forEach((cell, i) => {\n      if (!cell.isEmpty) {\n        cells[currentIndex].setValue(cell.value);\n\n        if (currentIndex !== i) {\n          cell.clear();\n        }\n        currentIndex++;\n      }\n    });\n\n    for (let i = 0; i < cells.length - 1; i++) {\n      if (!cells[i].isEmpty && cells[i].value === cells[i + 1].value) {\n        const mergedValue = cells[i].value * 2;\n\n        cells[i].setValue(mergedValue);\n        cells[i + 1].clear();\n        score += mergedValue;\n        i++;\n      }\n    }\n\n    currentIndex = 0;\n\n    cells.forEach((cell, i) => {\n      if (!cell.isEmpty) {\n        cells[currentIndex].setValue(cell.value);\n\n        if (currentIndex !== i) {\n          cell.clear();\n        }\n        currentIndex++;\n      }\n    });\n\n    return score;\n  }\n\n  shiftLeft() {\n    let totalScore = 0;\n\n    this.cells.forEach((row) => {\n      totalScore += this.mergeCells(row);\n    });\n\n    return totalScore;\n  }\n\n  shiftRight() {\n    let totalScore = 0;\n\n    this.cells.forEach((row) => {\n      const reversedRow = row.slice().reverse();\n\n      totalScore += this.mergeCells(reversedRow);\n    });\n\n    return totalScore;\n  }\n\n  shiftUp() {\n    let totalScore = 0;\n\n    const transposedCells = this.transposeCells();\n\n    transposedCells.forEach((row) => {\n      totalScore += this.mergeCells(row);\n    });\n\n    return totalScore;\n  }\n\n  shiftDown() {\n    let totalScore = 0;\n\n    const transposedCells = this.transposeCells();\n\n    transposedCells.forEach((row) => {\n      const reversedRow = row.slice().reverse();\n\n      totalScore += this.mergeCells(reversedRow);\n    });\n\n    return totalScore;\n  }\n\n  transposeCells() {\n    const transposedCells = [];\n\n    for (let column = 0; column < this.cells[0].length; column++) {\n      transposedCells.push(this.cells.map((row) => row[column]));\n    }\n\n    return transposedCells;\n  }\n\n  addTile(value) {\n    const emptyCells = [];\n\n    this.cells.forEach((row, rowIndex) => {\n      row.forEach((cell, columnIndex) => {\n        if (cell.isEmpty) {\n          emptyCells.push({\n            row: rowIndex,\n            column: columnIndex,\n          });\n        }\n      });\n    });\n\n    if (emptyCells.length === 0) {\n      return false;\n    }\n\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    const randomCell = emptyCells[randomIndex];\n\n    this.cells[randomCell.row][randomCell.column].setValue(value);\n\n    return true;\n  }\n\n  reset() {\n    this.cells.forEach((row) => {\n      row.forEach((cell) => {\n        cell.clear();\n      });\n    });\n  }\n}\n\nmodule.exports = Field;\n","'use strict';\n\nclass Button {\n  constructor(element, startFunc, restartFunc) {\n    const START_TEXT = 'Start';\n    const START_CLASS = 'start';\n    const RESTART_TEXT = 'Restart';\n    const RESTART_CLASS = 'restart';\n\n    this.element = element;\n\n    this.element.addEventListener('click', () => {\n      if (this.element.classList.contains(START_CLASS)) {\n        startFunc();\n        this.element.classList.remove(START_CLASS);\n        this.element.classList.add(RESTART_CLASS);\n        this.element.textContent = RESTART_TEXT;\n      } else if (this.element.classList.contains(RESTART_CLASS)) {\n        restartFunc();\n        this.element.classList.remove(RESTART_CLASS);\n        this.element.classList.add(START_CLASS);\n        this.element.textContent = START_TEXT;\n      }\n    });\n  }\n}\n\nmodule.exports = Button;\n","'use strict';\n\nclass Message {\n  constructor(element) {\n    this.element = element;\n  }\n\n  setMessage(messageType) {\n    const messages = this.element.querySelectorAll('.message');\n\n    messages.forEach((message) => {\n      if (message.classList.contains(`message-${messageType}`)) {\n        message.classList.remove('hidden');\n      } else {\n        message.classList.add('hidden');\n      }\n    });\n  }\n}\n\nmodule.exports = Message;\n","'use strict';\n\nclass Score {\n  constructor(element) {\n    this.element = element;\n    this.value = 0;\n  }\n\n  addPoints(value) {\n    this.value += value;\n    this.element.textContent = this.value;\n  }\n\n  reset() {\n    this.value = 0;\n    this.element.textContent = this.value;\n  }\n}\n\nmodule.exports = Score;\n","'use strict';\n\nclass Controls {\n  constructor(onLeft, onRight, onUp, onDown, onAction) {\n    this.enabled = false;\n    this.onLeft = onLeft;\n    this.onRight = onRight;\n    this.onUp = onUp;\n    this.onDown = onDown;\n    this.onAction = onAction;\n\n    this.KEYS = {\n      LEFT: 'ArrowLeft',\n      RIGHT: 'ArrowRight',\n      UP: 'ArrowUp',\n      DOWN: 'ArrowDown',\n    };\n\n    document.addEventListener('keydown', (keyboardEvent) => {\n      if (!this.enabled) {\n        return;\n      }\n\n      switch (keyboardEvent.key) {\n        case this.KEYS.LEFT:\n          this.onLeft();\n          break;\n        case this.KEYS.RIGHT:\n          this.onRight();\n          break;\n        case this.KEYS.UP:\n          this.onUp();\n          break;\n        case this.KEYS.DOWN:\n          this.onDown();\n          break;\n        default:\n          break;\n      }\n\n      if (Object.values(this.KEYS).includes(keyboardEvent.key)) {\n        this.onAction();\n      }\n    });\n  }\n}\n\nmodule.exports = Controls;\n","'use strict';\n\nconst Controls = require('./Controls');\n\nclass SwipeControls extends Controls {\n  constructor(onLeft, onRight, onUp, onDown, onAction) {\n    super(onLeft, onRight, onUp, onDown, onAction);\n\n    let touchStartX, touchStartY;\n\n    document.addEventListener('touchstart', (e) => {\n      touchStartX = e.touches[0].clientX;\n      touchStartY = e.touches[0].clientY;\n    });\n\n    document.addEventListener('touchend', (e) => {\n      const touchEndX = e.changedTouches[0].clientX;\n      const touchEndY = e.changedTouches[0].clientY;\n      const deltaX = touchEndX - touchStartX;\n      const deltaY = touchEndY - touchStartY;\n\n      if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        // Minimum threshold for a valid horizontal swipe\n        if (Math.abs(deltaX) > 50) {\n          if (deltaX > 0) {\n            this.onRight();\n          } else {\n            this.onLeft();\n          }\n          this.onAction();\n        }\n      } else {\n        // Minimum threshold for a valid vertical swipe\n        if (Math.abs(deltaY) > 50) {\n          if (deltaY > 0) {\n            this.onDown();\n          } else {\n            this.onUp();\n          }\n          this.onAction();\n        }\n      }\n    });\n  }\n}\n\nmodule.exports = SwipeControls;\n","'use strict';\n\nconst Field = require('./Field');\nconst Button = require('./Button');\nconst Message = require('./Message');\nconst Score = require('./Score');\nconst SwipeControls = require('./SwipeControls');\n\nclass Game {\n  constructor() {\n    this.START_VALUE = 2;\n    this.END_VALUE = 2048;\n\n    this.MESSAGES = {\n      WIN: 'win',\n      LOSE: 'lose',\n      START: 'start',\n    };\n\n    const getRandomValue = (min, max) => {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n\n    this.score = new Score(document.querySelector('.game-score'));\n    this.message = new Message(document.querySelector('.message-container'));\n    this.field = new Field(document.querySelector('.game-field'));\n\n    const onStart = () => {\n      this.field.addTile(this.START_VALUE * getRandomValue(1, 2));\n      this.field.addTile(this.START_VALUE * getRandomValue(1, 2));\n      this.message.setMessage();\n      this.controls.enabled = true;\n    };\n\n    const onRestart = () => {\n      this.score.reset();\n      this.message.setMessage(this.MESSAGES.START);\n      this.field.reset();\n      this.controls.enabled = false;\n    };\n\n    const onLeft = () => {\n      const points = this.field.shiftLeft();\n\n      this.score.addPoints(points);\n    };\n\n    const onRight = () => {\n      const points = this.field.shiftRight();\n\n      this.score.addPoints(points);\n    };\n\n    const onUp = () => {\n      const points = this.field.shiftUp();\n\n      this.score.addPoints(points);\n    };\n\n    const onDown = () => {\n      const points = this.field.shiftDown();\n\n      this.score.addPoints(points);\n    };\n\n    const onAction = () => {\n      const maxValue = this.field.getMaxValue();\n\n      if (maxValue === this.END_VALUE) {\n        this.message.setMessage(this.MESSAGES.WIN);\n        this.controls.enabled = false;\n\n        return;\n      }\n\n      if (!this.field.hasAvailableMoves()) {\n        this.message.setMessage(this.MESSAGES.LOSE);\n        this.controls.enabled = false;\n\n        return;\n      }\n\n      const newValue = this.START_VALUE * getRandomValue(1, 2);\n\n      this.field.addTile(newValue);\n    };\n\n    this.button = new Button(\n      document.querySelector('.controls .button'),\n      onStart, onRestart\n    );\n\n    this.controls = new SwipeControls(onLeft, onRight, onUp, onDown, onAction);\n    this.message.setMessage(this.MESSAGES.START);\n  }\n}\n\nmodule.exports = Game;\n","'use strict';\n\nconst Game = require('./Game');\n\nfunction initializeGame() {\n  return new Game();\n}\n\ninitializeGame();\n"]}